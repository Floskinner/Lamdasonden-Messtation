<div id="menueModal" class="w3-modal">
    <div class="w3-modal-content w3-card-4 w3-animate-zoom">

        <div class="w3-center w3-border-bottom modalHeaderFooter"><br>
            <span onclick="document.getElementById('menueModal').style.display='none'"
                class="w3-button w3-xlarge w3-hover-red w3-display-topright" title="Close">&times;</span>
            <h3>Einstellungen</h3>
        </div>

        <form class="w3-container w3-padding-16 modalBody">
            <h4>Anzuzeigende Banken:</h4>
            <input id="bank1-show" class="w3-check" type="checkbox" {% if ANZEIGEN_BANK_1 %} checked="checked" {% endif
                %}>
            <label>Bank 1 &#128993</label><br>

            <input id="bank2-show" class="w3-check" type="checkbox" {% if ANZEIGEN_BANK_2 %} checked="checked" {% endif
                %}>
            <label>Bank 2 &#128308</label><br>

            <h4>Anzuzeigende Nachkommastellen:</h4>
            <input class="w3-radio" type="radio" name="nachkommastellen" value="1" {% if NACHKOMMASTELLEN==1 %} checked
                {% endif %}>
            <label>1</label><br>
            <input class="w3-radio" type="radio" name="nachkommastellen" value="2" {% if NACHKOMMASTELLEN==2 %} checked
                {% endif %}>
            <label>2</label><br>
            <input class="w3-radio" type="radio" name="nachkommastellen" value="3" {% if NACHKOMMASTELLEN==3 %} checked
                {% endif %}>
            <label>3</label><br>

            <h4>Blinken der Werte im roten Bereich:</h4>
            <input id="blink" class="w3-check" type="checkbox" {% if WARNUNG_BLINKEN %} checked="checked" {% endif %}>
            <label>Blinken</label><br>

            <hr>

            <h4>Anzuzeigende Temperaturen:</h4>
            <input id="temp1-show" class="w3-check" type="checkbox" {% if ANZEIGEN_TEMP_1 %} checked="checked" {% endif %}>
            <label>Temp 1 &#128993</label><br>

            <input id="temp2-show" class="w3-check" type="checkbox" {% if ANZEIGEN_TEMP_2 %} checked="checked" {% endif %}>
            <label>Temp 2 &#128308</label><br>

            <hr>

            <h4>Reset Temperatursensoren:</h4>
            <div class="w3-button w3-round-large w3-border w3-gray"
                onclick=reset_temp_sensors(0)>Zurücksetzten von Sensor 1 &#128993</div><br>

            <div class="w3-button w3-round-large w3-border w3-gray"
                onclick=reset_temp_sensors(1)>Zurücksetzten von Sensor 2 &#128308</div>

            <hr>

            <h4>Korrekturfaktor für Lamdaberechnung:</h4>
            <label>Neukalibrierung? </label><input id="do_neukalibrierung" class="w3-check" type="checkbox"
                onchange=toggle_correction()><br>
            <p id="warning" style="color: red; display: none;">!!! Eingabe darf nur bei einer Neukalibrierung
                verändert werden !!!"</p>
            <br>
            <label>Bank 1 &#128993</label><br>
            <input id="correction_bank_1" class="w3-input" style="width:30%" type="text"
                value="{{ KORREKTURFAKTOR_BANK_1 }}" placeholder="0.511" disabled>
            <br>
            <label>Bank 2 &#128308</label><br>
            <input id="correction_bank_2" class="w3-input" style="width:30%" type="text"
                value="{{ KORREKTURFAKTOR_BANK_2 }}" placeholder="0.511" disabled>
        </form>

        <div class="w3-container w3-padding-16 w3-border-top modalHeaderFooter">
            <button class="w3-button w3-round-large w3-border"
                onclick="location.href='{{ url_for('system') }}'">System</button>
            <button type="button" class="w3-button w3-round-large w3-border w3-right w3-green"
                onclick=save_settings()>Speichern</button>
        </div>
    </div>
</div>

<script type="text/javascript">

    function openMenue() {
        update_setting_text();
        menueModal.css("display", "block");
    }

    function save_settings() {
        // Neue Werte auslesen
        const blink = $("#blink").prop("checked");
        const bank1 = $("#bank1-show").prop("checked");
        const bank2 = $("#bank2-show").prop("checked");
        const nachkommastellen = parseInt($("input[name='nachkommastellen']:checked").val());

        const temp1 = $("#temp1-show").prop("checked");
        const temp2 = $("#temp2-show").prop("checked");

        // Daten für das Backend zum speichern
        data = {
            "WARNUNG_BLINKEN": blink,
            "ANZEIGEN_BANK_1": bank1,
            "ANZEIGEN_BANK_2": bank2,
            "NACHKOMMASTELLEN": nachkommastellen,
            "ANZEIGEN_TEMP_1": temp1,
            "ANZEIGEN_TEMP_2": temp2
        }

        // Korrekturfaktoren nur auslesen wenn Neukalibrierung
        if ($("#do_neukalibrierung").prop("checked")) {
            const correction_bank_1 = $("#correction_bank_1").val().replace(",", ".");
            const correction_bank_2 = $("#correction_bank_2").val().replace(",", ".");

            if (correction_bank_1){
                data["KORREKTURFAKTOR_BANK_1"] = correction_bank_1;
            }
            if (correction_bank_2){
                data["KORREKTURFAKTOR_BANK_2"] = correction_bank_2;
            }
        }

        // Daten zum Backend senden und speichern
        $.ajax({
            type: "POST",
            url: "/settings",
            data: data,
            statusCode: {
                400: (xhr) => {
                    const response = xhr.responseJSON?.message || "Settings not Saved! Please check!";
                    alert(response);
                },
                200: (xhr) => {
                    const response = xhr.responseJSON?.message || "Settings Saved!";
                    alert(response);

                    // Update data on the page #TODO: Consider dependencies
                    blinking = blink;
                    show_values(bank1, bank2, temp1, temp2);
                    decimalPlaces = $("input[name='nachkommastellen']:checked").val();
                }
            },
            dataType: "json"
        });

        // Menue Modal schließen
        document.getElementById('menueModal').style.display = 'none'
    }

    function update_setting_text() {
        $.ajax({
            type: "GET",
            url: "/settings",
            success: (data, textStatus, jqXHR) => {
                $("#correction_bank_1").val(data["KORREKTURFAKTOR_BANK_1"]);
                $("#correction_bank_2").val(data["KORREKTURFAKTOR_BANK_2"]);
                $("#blink").prop("checked", data["WARNUNG_BLINKEN"]);
                $("#bank1-show").prop("checked", data["ANZEIGEN_BANK_1"]);
                $("#bank2-show").prop("checked", data["ANZEIGEN_BANK_2"]);
                $("input[name='nachkommastellen'][value='" + data["NACHKOMMASTELLEN"] + "']").prop("checked", true);
                $("#temp1-show").prop("checked", data["ANZEIGEN_TEMP_1"]);
                $("#temp2-show").prop("checked", data["ANZEIGEN_TEMP_2"]);
            },
            dataType: "json"
        });
    }

    /**
     * Korrekturfaktoren nur bei Neukalibrierung änderbar
     * Zeig auserdem eine Warnung an
     */
    function toggle_correction() { 

        if ($('#warning').is(':visible')) {
            $('#correction_bank_1').prop('disabled', true);
            $('#correction_bank_2').prop('disabled', true);
        } else {
            alert("ACHTUNG!\nEingabe darf nur bei einer Neukalibrierung verändert werden!");
            $('#correction_bank_1').prop('disabled', false);
            $('#correction_bank_2').prop('disabled', false);
        }

        $('#warning').toggle();
    }

    function reset_temp_sensors(senor) {
        $.ajax({
            type: "POST",
            url: "/reset_temp_sensors",
            data: {
                "sensor": senor
            },
            statusCode: {
                400: () => {
                    alert("Reset not Saved! Please check!");
                },
                200: () => {
                    alert("Reset Saved!");
                }
            },
            dataType: "json"
        });
    }
</script>