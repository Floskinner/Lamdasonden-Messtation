{% extends "base.jinja" %}

{% block title %}Verlauf{% endblock title %}

{% block pageNavbar %}
<a href="/" class="w3-bar-item w3-button w3-left fa fa-arrow-left" style="font-size:24px"></a>

{{ super() }}
{% endblock pageNavbar %}


{% block main %}


<div class="w3-center w3-border-bottom" style="margin-bottom: 20px;"><br>
    <h2><b>Verlauf</b></h2>
    <div class="w3-container" style="margin-bottom: 15px;">
        <label>Temperatur</label>
        <input class="w3-radio" type="radio" name="history" value="temperatur" onchange="set_history()" checked>
        <label>Lambda</label>
        <input class="w3-radio" type="radio" name="history" value="lambda" onchange="set_history()">
    </div>
</div>

<div class="w3-container myChart">
    <canvas id="historyCanvas"></canvas>
</div>

<div class="w3-container>" style="margin-bottom: 15px;">

    <label>Von</label>
    <input id="start_date" type="date">
    <input id="start_time" type="time">
    <label>Bis</label>
    <input id="end_date" type="date">
    <input id="end_time" type="time">

    <button type="button" class="w3-button w3-round-large w3-border w3-right w3-green"
        onclick="set_history()">Anzeigen</button>
</div>

{% endblock %}

{% block javaScript %}
{{ super() }}
<script src="../static/javascript/chart/chart.umd.js"></script>
<script src="../static/javascript/chart/chartjs-adapter-date-fns.bundle.min.js"></script>
<script src="../static/javascript/chart/hammerjs@2.0.8"></script>
<script src="../static/javascript/chart/chartjs-plugin-zoom.min.js"></script>
{% endblock javaScript %}


{% block pageJavaScript %}

<script type="text/javascript" charset="utf-8">
    let historyChart = new Chart(document.getElementById('historyCanvas'));

    const start_date = document.getElementById('start_date');
    const end_date = document.getElementById('end_date');
    const start_time = document.getElementById('start_time');
    const end_time = document.getElementById('end_time');

    window.addEventListener("load",(event) => {
        set_dates();
        set_history();
    });

    function set_history() {
        const start_date = new Date(document.getElementById('start_date').value);
        const end_date = new Date(document.getElementById('end_date').value);
        const start_clock = document.getElementById('start_time').value;
        const end_clock = document.getElementById('end_time').value;

        start_date.setHours(start_clock.split(':')[0]);
        start_date.setMinutes(start_clock.split(':')[1]);
        end_date.setHours(end_clock.split(':')[0]);
        end_date.setMinutes(end_clock.split(':')[1]);

        const start_time = new Date(start_date.toUTCString()).toISOString().slice(0, -1);
        const end_time = new Date(end_date.toUTCString()).toISOString().slice(0, -1);
        
        const history = $("input[name='history']:checked").val();

        if (history == 'temperatur') {
            set_temp_history(start_time, end_time);
        } else if (history == 'lambda') {
            set_lambda_history(start_time, end_time);
        }
    }

    function set_temp_history(start_time, end_time) {

        $.ajax({
            url: '/tempdata',
            type: 'GET',
            dataType: 'json',
            data: {
                'start_time': start_time,
                'end_time': end_time,
            },
            success: function (data) {
                // console.log(data);

                let timestamps = [];
                let temperatures = [];

                data.forEach((item, index) => {
                    timestamps.push(convert_iso_to_timestamp(item[0]));
                    temperatures.push(item[1]);
                });

                historyChart.destroy();
                historyChart = new Chart(document.getElementById('historyCanvas'), {
                    data: {
                        labels: timestamps,
                        datasets: [{
                            label: 'Temperatur 1',
                            data: temperatures,
                            backgroundColor: 'rgba(255, 241, 0, 0.2)',
                            borderColor: 'rgba(255, 241, 0, 1)',
                            borderWidth: 1,
                            fill: false,
                        } ],
                        //{
                        //    label: 'Temperatur 2',
                        //    data: temperatures,
                        //    backgroundColor: 'rgba(232, 18, 36, 0.2)',
                        //    borderColor: 'rgba(232, 18, 36, 1)',
                        //    borderWidth: 1,
                        //    fill: false,
                        //}],
                    },
                    type: "line",
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: "top",
                            },
                            title: {
                                display: false,
                            },
                            zoom: {
                                zoom: {
                                    wheel: {
                                        enabled: true,
                                    },
                                    pinch: {
                                        enabled: true
                                    },
                                    mode: 'x',
                                },
                            }
                        },
                        scales: {
                            x: {
                                type: "time",
                                time: {
                                    unit: "minute",
                                    displayFormats: {
                                        minute: "HH:mm:ss",
                                    },
                                },
                            },
                            y: {
                                type: "linear",
                            },
                        },
                    },
                });
            },
            error: function (error) {
                console.log(error);
            }
        });
    }

    function convert_iso_to_timestamp(iso) {
        const date = new Date(iso);
        return date.getTime();
    }

    function set_dates() {
        set_date(start_date);
        set_date(end_date);
        set_time(start_time);
        set_time(end_time, 1, 0);
    }

    function set_date(element) {
        const date = new Date();
        const date_iso = date.toISOString();
        const year = date_iso.slice(0, 4);
        const month = date_iso.slice(5, 7);
        const day = date_iso.slice(8, 10);
        const date_string = year + "-" + month + "-" + day;
        element.value = date_string;
    }

    function set_time(element, h_offset = 0, m_offset = 0) {
        const date = new Date();
        const date_iso = date.toISOString();
        const hours = (parseInt(date_iso.slice(11, 13)) + h_offset).toString().padStart(2, '0');
        const minutes = (parseInt(date_iso.slice(14, 16)) + m_offset).toString().padStart(2, '0');
        const time_string = hours + ":" + minutes;
        element.value = time_string;
    }
</script>

{% endblock pageJavaScript %}